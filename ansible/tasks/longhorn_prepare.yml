---
- name: Install pkg requirements for longhorn
  delegate_to: "{{ item }}"
  ansible.builtin.dnf:
    name:
      - iscsi-initiator-utils
      - cryptsetup
    state: present
  loop: "{{ longhorn_nodes }}"

- name: Enable and start open-iscsi service
  delegate_to: "{{ item }}"
  ansible.builtin.systemd:
    name: iscsid
    enabled: true
    state: started
  loop: "{{ longhorn_nodes }}"

- name: Load kernel modules for Longhorn on all longhorn nodes
  delegate_to: "{{ item.0 }}"
  community.general.modprobe:
    name: "{{ item.1 }}"
    state: present
    persistent: present
  loop: "{{ longhorn_nodes | product(['nvme_tcp', 'uio_pci_generic', 'dm_crypt']) | list }}"
  loop_control:
    label: "{{ item.0 }}: {{ item.1 }}"

- name: Set HugePages for Longhorn on all longhorn nodes
  delegate_to: "{{ item }}"
  ansible.posix.sysctl:
    name: vm.nr_hugepages
    value: "1024"
    state: present
    reload: true
    sysctl_file: /etc/sysctl.d/99-longhorn.conf
  loop: "{{ longhorn_nodes }}"

- name: Label storage nodes for longhorn
  kubernetes.core.k8s:
    state: patched
    kind: node
    name: "{{ item }}"
    kubeconfig: "{{ host_kubeconfig_path }}"
    definition:
      metadata:
        labels:
          longhorn.io/role: "storage"
  loop: "{{ longhorn_nodes }}"

- name: Label default disks to use for longhorn storage nodes
  kubernetes.core.k8s:
    state: patched
    kind: node
    name: "{{ item }}"
    kubeconfig: "{{ host_kubeconfig_path }}"
    definition:
      metadata:
        labels:
          node.longhorn.io/create-default-disk: "config"
        annotations:
          node.longhorn.io/default-disks-config: '{{ longhorn_disks_config | to_json }}'
  loop: "{{ longhorn_nodes }}"

# - name: Display values for longhorn helm chart
#   ansible.builtin.debug:
#     msg: "{{ lookup('file', '../files/longhorn/values.yml') | from_yaml }}"

# - name: Install Longhorn with Helm
#   kubernetes.core.helm:
#     name: longhorn
#     release_namespace: longhorn-system
#     create_namespace: true
#     kubeconfig: "{{ host_kubeconfig_path }}"
#     chart_ref: longhorn
#     chart_repo_url: https://charts.longhorn.io
#     state: present
#     values: "{{ lookup('file', '../files/longhorn/values.yml') | from_yaml }}"
